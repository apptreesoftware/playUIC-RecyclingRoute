apptree.connector.version = "1.0"
# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile
# ~~~~~
# Play uses HOCON as its configuration file format.  HOCON has a number
# of advantages over other config formats, but there are two things that
# can be used when modifying settings.
#
# You can include other configuration files in this main application.conf file:
#include "extra-config.conf"
#
# You can declare variables and substitute for them:
#mykey = ${some.value}
#
# And if an environment variable exists when there is no other subsitution, then
# HOCON will fall back to substituting environment variable:
#mykey = ${JAVA_HOME}

## Akka
# https://www.playframework.com/documentation/latest/ScalaAkka#Configuration
# https://www.playframework.com/documentation/latest/JavaAkka#Configuration
# ~~~~~
# Play uses Akka internally and exposes Akka Streams and actors in Websockets and
# other streaming HTTP responses.
akka {
  # "akka.log-config-on-start" is extraordinarly useful because it log the complete
  # configuration at INFO level, including defaults and overrides, so it s worth
  # putting at the very top.
  #
  # Put the following in your conf/logback.xml file:
  #
  # <logger name="akka.actor" level="INFO" />
  #
  # And then uncomment this line to debug the configuration.
  #
  #log-config-on-start = true
}

## Secret key
# http://www.playframework.com/documentation/latest/ApplicationSecret
# ~~~~~
# The secret key is used to sign Play's session cookie.
# This must be changed for production, but we don't recommend you change it in this file.
play.crypto.secret = "w_81]F2:LAkldsKn6>dlOEqs]x1^;`i/yb6k=SNpRdJ`WQU<wxsBba]_Dz/RWFuk"
play.crypto.secret = ${?APPLICATION_SECRET}
GOOGLE_API_KEY = ${GOOGLE_API_KEY}

#Turning this on will reject any request that doesn't pass validation of the secret above ( registered in the portal )
apptree.crypto.validate = false

host = ${?HOST}

play.application.loader = "sdk.SDKApplicationLoader"

play.modules {
  # By default, Play will load any class called Module that is defined
  # in the root package (the "app" directory), or you can define them
  # explicitly below.
  # If there are any built-in modules that you want to disable, you can list them here.
  //enabled += SampleModule

  # If there are any built-in modules that you want to disable, you can list them here.
  #disabled += ""
}
libraryDependencies += filters

play.filters {
  ## CORS filter configuration
  # https://www.playframework.com/documentation/latest/CorsFilter
  # ~~~~~
  # CORS is a protocol that allows web applications to make requests from the browser
  # across different domains.
  # NOTE: You MUST apply the CORS configuration before the CSRF filter, as CSRF has
  # dependencies on CORS settings.
  cors {
    # Filter paths by a whitelist of path prefixes
    #pathPrefixes = ["/some/path", ...]

    # The allowed origins. If null, all origins are allowed.
    #allowedOrigins = ["http://www.example.com"]
    allowedOrigins = null

    # The allowed HTTP methods. If null, all methods are allowed
    #allowedHttpMethods = ["GET", "POST"]
  }
  hosts {
    # Allow requests to example.com, its subdomains, and localhost:9000.
    # allowed = [".example.com", "localhost:9000", "localhost:8111"]
  }
}

play.evolutions {
  # You can disable evolutions for a specific datasource if necessary
  db.default.enabled = false
}
apptree {
  platform.version = "5.5"
}

//db {
//  default.driver = org.postgresql.Driver
//  default.hikaricp.maximumPoolSize = 5
//  default.hikaricp.maximumPoolSize = ${?MAX_DB_POOL_SIZE}
  //Dev Database
//  default.url = "postgres://nfjuhiqgvmsheq:92ZV_tb0mKFF9NEkX84aUXr5MP@ec2-54-235-123-254.compute-1.amazonaws.com:5432/d6fhfvnve824b0?sslmode=require"
//  default.url = ${?DATABASE_URL}
//  default.logSql = true
//  default.jndiName=DefaultDS
//}1
play.evolutions.autoApply=true
ebean.default = ["model.*"]
ebeanconfig.serverConfigs = [sample]

db.default.url = ${?CONNECTOR_DB_URL}
db.default.username = ${?CONNECTOR_DB_USERNAME}
db.default.password = ${?CONNECTOR_DB_PASSWORD}

default.driver = org.postgresql.Driver
db.default.logSql = true
